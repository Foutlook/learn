<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:redisson="http://redisson.org/schema/redisson"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://redisson.org/schema/redisson
       http://redisson.org/schema/redisson/redisson.xsd http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:spring-config.properties"/>

    <!--修改默认编码 redisson默认编码方式为org.redisson.codec.JsonJacksonCodec-->
    <!--<bean id="stringCodec" class="org.redisson.client.codec.StringCodec"/>-->

    <!-- 单Redis节点模式的配置 -->
    <bean id="jsonJacksonCodec" class="org.redisson.codec.JsonJacksonCodec"/>
    <bean id="defaultCodecProvider" class="org.redisson.codec.DefaultCodecProvider"/>
    <bean id="defaultResolverProvider" class="org.redisson.liveobject.provider.DefaultResolverProvider"/>
    <bean id="nioEventLoopGroup" class="io.netty.channel.nio.NioEventLoopGroup"/>

    <bean id="defaultThreadFactory" class="io.netty.util.concurrent.DefaultThreadFactory">
        <constructor-arg name="poolName" value="redisson"/>
    </bean>
    <bean id="executors" factory-method="newFixedThreadPool" class="java.util.concurrent.Executors">
        <constructor-arg name="nThreads" value="50"/>
        <constructor-arg ref="defaultThreadFactory"/>
    </bean>


    <!-- 单台redis机器配置   -->
    <redisson:client id="redissonClient"
                     threads="0"
                     netty-threads="0"
                     codec-ref="jsonJacksonCodec"
                     redisson-reference-enabled="true"
                     codec-provider-ref="defaultCodecProvider"
                     resolver-provider-ref="defaultResolverProvider"
                     executor-ref="executors"
                     event-loop-group-ref="nioEventLoopGroup">
        <redisson:single-server connection-minimum-idle-size="5" database="0" address="redis://192.168.130.128:6379"/>
    </redisson:client>

    <!--集群模式-->
    <!--<redisson:client id="redissonClient">
        <redisson:cluster-servers slave-connection-pool-size="64" master-connection-pool-size="64" connect-timeout="10000"
         ping-timeout="1000" >
            <redisson:node-address value="${redis.address1}"/>
            <redisson:node-address value="${redis.address2}"/>
            <redisson:node-address value="${redis.address3}"/>
        </redisson:cluster-servers>
    </redisson:client>-->

</beans>